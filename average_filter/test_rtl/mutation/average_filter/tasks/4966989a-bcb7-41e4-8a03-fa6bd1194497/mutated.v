/* Generated by Yosys 0.49+10 (git sha1 18a7c0038, x86_64-apple-darwin23.5-clang++ 18.1.8 -fPIC -O3) */

(* src = "average_filter.v:32.1-116.12" *)
(* top =  1  *)
(* hdlname = "average_filter" *)
module average_filter(clk, reset_n, i_ce, data_in, data_out, o_ce);
  (* src = "average_filter.v:33.35-33.38" *)
  input clk;
  wire clk;
  (* src = "average_filter.v:36.35-36.42" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "average_filter.v:37.35-37.43" *)
  output [7:0] data_out;
  reg [7:0] data_out;
  (* src = "average_filter.v:35.35-35.39" *)
  input i_ce;
  wire i_ce;
  wire [7:0] \i_ce_$mux_S_1_Y ;
  (* src = "average_filter.v:102.21-102.42" *)
  wire [8:0] \i_ce_$mux_S_2_B ;
  wire [8:0] \i_ce_$mux_S_2_Y ;
  wire \i_ce_$mux_S_Y ;
  (* src = "average_filter.v:79.22-79.33" *)
  reg [7:0] last_sample;
  (* src = "average_filter.v:38.35-38.39" *)
  output o_ce;
  reg o_ce;
  (* src = "average_filter.v:63.5-72.8" *)
  wire \o_ce_$dff_Q_D ;
  (* src = "average_filter.v:34.35-34.42" *)
  input reset_n;
  wire reset_n;
  (* src = "average_filter.v:97.5-104.8" *)
  wire [8:0] \reset_n_$mux_S_1_Y ;
  (* src = "average_filter.v:107.5-114.8" *)
  wire [7:0] \reset_n_$mux_S_2_Y ;
  (* src = "average_filter.v:82.5-89.8" *)
  wire [7:0] \reset_n_$mux_S_Y ;
  (* src = "average_filter.v:48.15-48.21" *)
  reg sum_ce;
  (* src = "average_filter.v:51.5-60.8" *)
  wire \sum_ce_$dff_Q_D ;
  wire [7:0] \sum_ce_$mux_S_1_Y ;
  wire \sum_ce_$mux_S_Y ;
  (* src = "average_filter.v:93.22-93.28" *)
  reg [8:0] sum_ff;
  assign \i_ce_$mux_S_2_B  = $signed(data_in) + (* src = "average_filter.v:102.21-102.42" *) $signed(last_sample);
  (* src = "average_filter.v:107.5-114.8" *)
  always @(posedge clk)
    data_out <= \reset_n_$mux_S_2_Y ;
  assign \i_ce_$mux_S_Y  = i_ce ? (* full_case = 32'd1 *) (* src = "average_filter.v:55.12-55.16|average_filter.v:55.9-58.26" *) 1'h1 : 1'h0;
  assign \i_ce_$mux_S_1_Y  = i_ce ? (* src = "average_filter.v:86.12-86.16|average_filter.v:86.9-87.34" *) data_in : last_sample;
  assign \i_ce_$mux_S_2_Y  = 1'h1 ? (* src = "average_filter.v:101.12-101.16|average_filter.v:101.9-102.43" *) \i_ce_$mux_S_2_B  : sum_ff;
  (* src = "average_filter.v:82.5-89.8" *)
  always @(posedge clk)
    last_sample <= \reset_n_$mux_S_Y ;
  (* src = "average_filter.v:63.5-72.8" *)
  always @(posedge clk)
    o_ce <= \o_ce_$dff_Q_D ;
  assign \o_ce_$dff_Q_D  = reset_n ? (* full_case = 32'd1 *) (* src = "average_filter.v:64.11-64.19|average_filter.v:64.7-71.10" *) \sum_ce_$mux_S_Y  : 1'h0;
  assign \reset_n_$mux_S_Y  = reset_n ? (* full_case = 32'd1 *) (* src = "average_filter.v:83.11-83.19|average_filter.v:83.7-88.10" *) \i_ce_$mux_S_1_Y  : 8'h00;
  assign \reset_n_$mux_S_1_Y  = reset_n ? (* full_case = 32'd1 *) (* src = "average_filter.v:98.11-98.19|average_filter.v:98.7-103.10" *) \i_ce_$mux_S_2_Y  : 9'h000;
  assign \reset_n_$mux_S_2_Y  = reset_n ? (* full_case = 32'd1 *) (* src = "average_filter.v:108.11-108.19|average_filter.v:108.7-113.10" *) \sum_ce_$mux_S_1_Y  : 8'h00;
  (* src = "average_filter.v:51.5-60.8" *)
  always @(posedge clk)
    sum_ce <= \sum_ce_$dff_Q_D ;
  assign \sum_ce_$dff_Q_D  = reset_n ? (* full_case = 32'd1 *) (* src = "average_filter.v:52.11-52.19|average_filter.v:52.7-59.10" *) \i_ce_$mux_S_Y  : 1'h0;
  assign \sum_ce_$mux_S_Y  = sum_ce ? (* full_case = 32'd1 *) (* src = "average_filter.v:67.12-67.18|average_filter.v:67.9-70.24" *) 1'h1 : 1'h0;
  assign \sum_ce_$mux_S_1_Y  = sum_ce ? (* src = "average_filter.v:111.12-111.18|average_filter.v:111.9-112.35" *) sum_ff[8:1] : data_out;
  (* src = "average_filter.v:97.5-104.8" *)
  always @(posedge clk)
    sum_ff <= \reset_n_$mux_S_1_Y ;
endmodule
